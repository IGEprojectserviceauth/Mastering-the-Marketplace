{"custom":{"clusterarmtemplate":"ew0KICAgICIkc2NoZW1hIjogImh0dHBzOi8vc2NoZW1hLm1hbmFnZW1lbnQuYXp1cmUuY29tL3NjaGVtYXMvMjAxOS0wNC0wMS9kZXBsb3ltZW50VGVtcGxhdGUuanNvbiMiLA0KICAgICJjb250ZW50VmVyc2lvbiI6ICIxLjAuMC4wIiwNCiAgICAicGFyYW1ldGVycyI6IHsNCiAgICAgICAgImNsdXN0ZXJSZXNvdXJjZU5hbWUiOiB7DQogICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLA0KICAgICAgICAgICAgIm1ldGFkYXRhIjogew0KICAgICAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgbmFtZSBvZiB0aGUgTWFuYWdlZCBDbHVzdGVyIHJlc291cmNlLiINCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCiAgICAgICAgImV4dGVuc2lvblJlc291cmNlTmFtZSI6IHsNCiAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsDQogICAgICAgICAgICAibWV0YWRhdGEiOiB7DQogICAgICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBuYW1lIG9mIHRoZSBleHRlbnNpb24uIg0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KICAgICAgICAiYXBwLXRpdGxlIjogew0KICAgICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwNCiAgICAgICAgICAgICJtZXRhZGF0YSI6IHsNCiAgICAgICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiQXBwIFRpdGxlIg0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KICAgICAgICAiYXBwLUZyb250QXBwTmFtZSI6IHsNCiAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsDQogICAgICAgICAgICAibWV0YWRhdGEiOiB7DQogICAgICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIklucHV0ICBBcHAgIE5hbWUiDQogICAgICAgICAgICB9DQogICAgICAgIH0sDQogICAgICAgICJhcHAtRnJvbnRBcHBSZXBsaWNhIjogew0KICAgICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwNCiAgICAgICAgICAgICJtZXRhZGF0YSI6IHsNCiAgICAgICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRW50ZXIgUmVwbGljYSINCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCiAgICAgICAgImFwcC1jbHVzdGVyRE5TIjogew0KICAgICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwNCiAgICAgICAgICAgICJtZXRhZGF0YSI6IHsNCiAgICAgICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRW50ZXIgQUtTIEROUyINCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCiAgICAgICAgImFwcC1OYW1lU3BhY2UiOiB7DQogICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLA0KICAgICAgICAgICAgImRlZmF1bHRWYWx1ZSI6ICJkZWZhdWx0IiwNCiAgICAgICAgICAgICJtZXRhZGF0YSI6IHsNCiAgICAgICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRW50ZXIgTmFtZVNwYWNlIg0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KICAgICAgICAiYXBwLW1vbmdvREJBZG1pbiI6IHsNCiAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsDQogICAgICAgICAgICAibWV0YWRhdGEiOiB7DQogICAgICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIkVudGVyIE1vbmdvIERCIGFkbWluIHVzZXJuYW1lIg0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KICAgICAgICAiYXBwLW1vbmdvREJQYXNzd29yZCI6IHsNCiAgICAgICAgICAgICJ0eXBlIjogInNlY3VyZVN0cmluZyIsDQogICAgICAgICAgICAibWV0YWRhdGEiOiB7DQogICAgICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIkVudGVyIE1vbmdvIERCIHBhc3N3b3JkIg0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfSwNCiAgICAidmFyaWFibGVzIjogew0KICAgICAgICAicGxhbi1uYW1lIjogInBsYW4tbmFtZSIsDQogICAgICAgICJwbGFuLXB1Ymxpc2hlciI6ICJwdWJsaXNoZXJpZCIsDQogICAgICAgICJwbGFuLW9mZmVySUQiOiAib2ZmZXJpZCIsDQogICAgICAgICJyZWxlYXNlVHJhaW4iOiAiU3RhYmxlIiwNCiAgICAgICAgImNsdXN0ZXJFeHRlbnNpb25UeXBlTmFtZSI6ICJbY29uY2F0KHZhcmlhYmxlcygncGxhbi1wdWJsaXNoZXInKSwgJy4nICwgdmFyaWFibGVzKCdwbGFuLW9mZmVySUQnKSwgJy0nLCB2YXJpYWJsZXMoJ3BsYW4tbmFtZScpKV0iDQogICAgfSwNCiAgICAicmVzb3VyY2VzIjogWw0KICAgICAgICB7DQogICAgICAgICAgICAidHlwZSI6ICJNaWNyb3NvZnQuS3ViZXJuZXRlc0NvbmZpZ3VyYXRpb24vZXh0ZW5zaW9ucyIsDQogICAgICAgICAgICAiYXBpVmVyc2lvbiI6ICIyMDIyLTAzLTAxIiwNCiAgICAgICAgICAgICJuYW1lIjogImV4dGVuc2lvbnN1c2FnZSIsDQogICAgICAgICAgICAiZGVwZW5kc09uIjogWw0KICAgICAgICAgICAgXSwNCiAgICAgICAgICAgICJwcm9wZXJ0aWVzIjogew0KICAgICAgICAgICAgICAgICJleHRlbnNpb25UeXBlIjogIk1pY3Jvc29mdC5FeHRlbnNpb25zVXNhZ2UiLA0KICAgICAgICAgICAgICAgICJyZWxlYXNlVHJhaW4iOiAiU3RhYmxlIg0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICJzY29wZSI6ICJbY29uY2F0KCdNaWNyb3NvZnQuQ29udGFpbmVyU2VydmljZS9tYW5hZ2VkQ2x1c3RlcnMvJywgcGFyYW1ldGVycygnY2x1c3RlclJlc291cmNlTmFtZScpKV0iDQogICAgICAgIH0sDQogICAgICAgIHsNCiAgICAgICAgICAgICJ0eXBlIjogIk1pY3Jvc29mdC5LdWJlcm5ldGVzQ29uZmlndXJhdGlvbi9leHRlbnNpb25zIiwNCiAgICAgICAgICAgICJhcGlWZXJzaW9uIjogIjIwMjItMDQtMDItcHJldmlldyIsDQogICAgICAgICAgICAibmFtZSI6ICJbcGFyYW1ldGVycygnZXh0ZW5zaW9uUmVzb3VyY2VOYW1lJyldIiwNCiAgICAgICAgICAgICJkZXBlbmRzT24iOiBbDQogICAgICAgICAgICAgICAgImV4dGVuc2lvbnN1c2FnZSINCiAgICAgICAgICAgIF0sDQogICAgICAgICAgICAicHJvcGVydGllcyI6IHsNCiAgICAgICAgICAgICAgICAiZXh0ZW5zaW9uVHlwZSI6ICJbdmFyaWFibGVzKCdjbHVzdGVyRXh0ZW5zaW9uVHlwZU5hbWUnKV0iLA0KICAgICAgICAgICAgICAgICJhdXRvVXBncmFkZU1pbm9yVmVyc2lvbiI6IHRydWUsDQogICAgICAgICAgICAgICAgInJlbGVhc2VUcmFpbiI6ICJbdmFyaWFibGVzKCdyZWxlYXNlVHJhaW4nKV0iLA0KICAgICAgICAgICAgICAgICJjb25maWd1cmF0aW9uU2V0dGluZ3MiOiB7DQogICAgICAgICAgICAgICAgICAgICJ0aXRsZSI6ICJbcGFyYW1ldGVycygnYXBwLXRpdGxlJyldIiwNCiAgICAgICAgICAgICAgICAgICAgImFwcEZyb250TGFiZWwiOiAiW3BhcmFtZXRlcnMoJ2FwcC1Gcm9udEFwcE5hbWUnKV0iLA0KICAgICAgICAgICAgICAgICAgICAicmVwbGljYUZyb250Q291bnQiOiAiW3BhcmFtZXRlcnMoJ2FwcC1Gcm9udEFwcFJlcGxpY2EnKV0iLA0KICAgICAgICAgICAgICAgICAgICAibW9uZ29EQkFkbWluIjogIltwYXJhbWV0ZXJzKCdhcHAtbW9uZ29EQkFkbWluJyldIiwNCiAgICAgICAgICAgICAgICAgICAgIm1vbmdvREJQYXNzd29yZCI6ICJbcGFyYW1ldGVycygnYXBwLW1vbmdvREJQYXNzd29yZCcpXSIsDQogICAgICAgICAgICAgICAgICAgICJjbHVzdGVyRE5TIjogIltwYXJhbWV0ZXJzKCdhcHAtY2x1c3RlckROUycpXSIsDQogICAgICAgICAgICAgICAgICAgICJuYW1lU3BhY2UiOiAiW3BhcmFtZXRlcnMoJ2FwcC1OYW1lU3BhY2UnKV0iDQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICJwbGFuIjogew0KICAgICAgICAgICAgICAgICJuYW1lIjogIlt2YXJpYWJsZXMoJ3BsYW4tbmFtZScpXSIsDQogICAgICAgICAgICAgICAgInB1Ymxpc2hlciI6ICJbdmFyaWFibGVzKCdwbGFuLXB1Ymxpc2hlcicpXSIsDQogICAgICAgICAgICAgICAgInByb2R1Y3QiOiAiW3ZhcmlhYmxlcygncGxhbi1vZmZlcklEJyldIg0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICJzY29wZSI6ICJbY29uY2F0KCdNaWNyb3NvZnQuQ29udGFpbmVyU2VydmljZS9tYW5hZ2VkQ2x1c3RlcnMvJywgcGFyYW1ldGVycygnY2x1c3RlclJlc291cmNlTmFtZScpKV0iDQogICAgICAgIH0NCiAgICBdLA0KICAgICJvdXRwdXRzIjoge30NCn0=","deploymentrestrictions":{"mincores":4,"minkubernetesversion":"1.21","minnodes":1,"newclusterrequired":false,"nodetype":"Linux","openshiftallowed":true,"requiregpunodes":false},"extensionregistrationparameters":"eyJiaWxsaW5nSWRlbnRpZmllciI6Im1pY3Jvc29mdC5tYXJrZXRwbGFjZS5leGFtcGxlLmF6dXJlLXRvZG8iLCJkZWZhdWx0U2NvcGUiOiJjbHVzdGVyIiwibmFtZXNwYWNlIjoiZHNhY3IwMSJ9","helmchart":"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","sh.porter":{"commit":"","manifest":"","manifestDigest":"ce2ce17ad02efeb11e363e5a887f3598c7bbdd6d7467b775b9ff8d1b1d0326d7","mixins":{"exec":{},"helm3":{}},"version":""},"sh.porter.file-parameters":{},"uidefinition":"ew0KICAiJHNjaGVtYSI6ICJodHRwczovL3NjaGVtYS5tYW5hZ2VtZW50LmF6dXJlLmNvbS9zY2hlbWFzLzAuMS4yLXByZXZpZXcvQ3JlYXRlVUlEZWZpbml0aW9uLk11bHRpVm0uanNvbiMiLA0KICAiaGFuZGxlciI6ICJNaWNyb3NvZnQuQXp1cmUuQ3JlYXRlVUlEZWYiLA0KICAidmVyc2lvbiI6ICIwLjEuMi1wcmV2aWV3IiwNCiAgInBhcmFtZXRlcnMiOiB7DQogICAgImNvbmZpZyI6IHsNCiAgICAgICJiYXNpY3MiOiB7DQogICAgICAgICJsb2NhdGlvbiI6IHsNCiAgICAgICAgICAidmlzaWJsZSI6IGZhbHNlDQogICAgICAgIH0sDQogICAgICAgICJyZXNvdXJjZUdyb3VwIjogew0KICAgICAgICAgICJhbGxvd0V4aXN0aW5nIjogdHJ1ZQ0KICAgICAgICB9DQogICAgICB9DQogICAgfSwNCiAgICAicmVzb3VyY2VUeXBlcyI6IFsNCiAgICAgICJNaWNyb3NvZnQuQ29udGFpbmVyU2VydmljZS9tYW5hZ2VkQ2x1c3RlcnMiDQogICAgXSwNCiAgICAiYmFzaWNzIjogWw0KICAgICAgew0KICAgICAgICAibmFtZSI6ICJjbHVzdGVyTG9va3VwQ29udHJvbCIsDQogICAgICAgICJ0eXBlIjogIk1pY3Jvc29mdC5Tb2x1dGlvbnMuQXJtQXBpQ29udHJvbCIsDQogICAgICAgICJyZXF1ZXN0Ijogew0KICAgICAgICAgICJtZXRob2QiOiAiR0VUIiwNCiAgICAgICAgICAicGF0aCI6ICJbY29uY2F0KHN1YnNjcmlwdGlvbigpLmlkLCAnL3Jlc291cmNlZ3JvdXBzLycsIHJlc291cmNlR3JvdXAoKS5uYW1lLCAgJy9wcm92aWRlcnMvTWljcm9zb2Z0LkNvbnRhaW5lclNlcnZpY2UvbWFuYWdlZENsdXN0ZXJzP2FwaS12ZXJzaW9uPTIwMjItMDMtMDEnKV0iDQogICAgICAgIH0NCiAgICAgIH0sDQogICAgICB7DQogICAgICAgICJuYW1lIjogIkNsdXN0ZXJSZXNvdXJjZU5hbWUiLA0KICAgICAgICAidHlwZSI6ICJNaWNyb3NvZnQuQ29tbW9uLkRyb3BEb3duIiwNCiAgICAgICAgImxhYmVsIjogIkNsdXN0ZXIgbmFtZSIsDQogICAgICAgICJ0b29sVGlwIjogIkFLUyBDbHVzdGVyIFJlc291cmNlIE5hbWUiLA0KICAgICAgICAiY29uc3RyYWludHMiOiB7DQogICAgICAgICAgImFsbG93ZWRWYWx1ZXMiOiAiW21hcChzdGVwcygnYmFzaWNzJykuY2x1c3Rlckxvb2t1cENvbnRyb2wudmFsdWUsIChpdGVtKSA9PiBwYXJzZShjb25jYXQoJ3tcImxhYmVsXCI6XCInLCBpdGVtLm5hbWUsICdcIixcInZhbHVlXCI6XCInLCBpdGVtLm5hbWUsICdcIn0nKSkpXSIsDQogICAgICAgICAgInJlcXVpcmVkIjogdHJ1ZQ0KICAgICAgICB9LA0KICAgICAgICAidmlzaWJsZSI6IHRydWUNCiAgICAgIH0NCiAgICBdLA0KICAgICJzdGVwcyI6IFsNCiAgICAgIHsNCiAgICAgICAgIm5hbWUiOiAiRXh0ZW5zaW9uQ29uZmlndXJhdGlvbiIsDQogICAgICAgICJsYWJlbCI6ICJFeHRlbnNpb24gc2V0dGluZ3MiLA0KICAgICAgICAiZWxlbWVudHMiOiBbDQogICAgICAgICAgew0KICAgICAgICAgICAgIm5hbWUiOiAiZXh0ZW5zaW9uUmVzb3VyY2VOYW1lIiwNCiAgICAgICAgICAgICJ0eXBlIjogIk1pY3Jvc29mdC5Db21tb24uVGV4dEJveCIsDQogICAgICAgICAgICAibGFiZWwiOiAiRXh0ZW5zaW9uIFJlc291cmNlIG5hbWUiLA0KICAgICAgICAgICAgImRlZmF1bHRWYWx1ZSI6ICIiLA0KICAgICAgICAgICAgInRvb2xUaXAiOiAiT25seSBhbHBoYW51bWVyaWMgY2hhcmFjdGVycyBhcmUgYWxsb3dlZCwgYW5kIHRoZSB2YWx1ZSBtdXN0IGJlIDYtMzAgY2hhcmFjdGVycyBsb25nLiIsDQogICAgICAgICAgICAiY29uc3RyYWludHMiOiB7DQogICAgICAgICAgICAgICJyZXF1aXJlZCI6IHRydWUsDQogICAgICAgICAgICAgICJyZWdleCI6ICJeW2EtejAtOUEtWl17NiwzMH0kIiwNCiAgICAgICAgICAgICAgInZhbGlkYXRpb25NZXNzYWdlIjogIk9ubHkgYWxwaGFudW1lcmljIGNoYXJhY3RlcnMgYXJlIGFsbG93ZWQsIGFuZCB0aGUgdmFsdWUgbXVzdCBiZSA2LTMwIGNoYXJhY3RlcnMgbG9uZy4iDQogICAgICAgICAgICB9LA0KICAgICAgICAgICAgInZpc2libGUiOiB0cnVlDQogICAgICAgICAgfSwNCiAgICAgICAgICB7DQogICAgICAgICAgICAibmFtZSI6ICJ0aXRsZSIsDQogICAgICAgICAgICAidG9vbFRpcCI6ICJUaXRsZSIsDQogICAgICAgICAgICAidHlwZSI6ICJNaWNyb3NvZnQuQ29tbW9uLlRleHRCb3giLA0KICAgICAgICAgICAgImxhYmVsIjogIlRpdGxlIiwNCiAgICAgICAgICAgICJkZWZhdWx0VmFsdWUiOiAiQXp1cmUgVG9EbyBBcHAiLA0KICAgICAgICAgICAgImNvbnN0cmFpbnRzIjogew0KICAgICAgICAgICAgICAicmVxdWlyZWQiOiB0cnVlLA0KICAgICAgICAgICAgICAicmVnZXgiOiAiXlthLXowLTlBLVpdezQsMzB9JCIsDQogICAgICAgICAgICAgICJ2YWxpZGF0aW9uTWVzc2FnZSI6ICJCZXR3ZWVuIDQgYW5kIDMwIGFscGhhbnVtZXJpYyBjaGFyYWN0ZXJzIg0KICAgICAgICAgICAgfQ0KICAgICAgICAgIH0sDQogICAgICAgICAgew0KICAgICAgICAgICAgIm5hbWUiOiAiRnJvbnRBcHBOYW1lIiwNCiAgICAgICAgICAgICJ0eXBlIjogIk1pY3Jvc29mdC5Db21tb24uVGV4dEJveCIsDQogICAgICAgICAgICAidG9vbFRpcCI6ICJGcm9udCBBcHAgTmFtZSIsDQogICAgICAgICAgICAibGFiZWwiOiAiRnJvbnRBcHBOYW1lIiwNCiAgICAgICAgICAgICJkZWZhdWx0VmFsdWUiOiAiIiwNCiAgICAgICAgICAgICJjb25zdHJhaW50cyI6IHsNCiAgICAgICAgICAgICAgInJlcXVpcmVkIjogdHJ1ZSwNCiAgICAgICAgICAgICAgInJlZ2V4IjogIl5bYS16MC05QS1aXXs0LDMwfSQiLA0KICAgICAgICAgICAgICAidmFsaWRhdGlvbk1lc3NhZ2UiOiAiQmV0d2VlbiA0IGFuZCAzMCBhbHBoYW51bWVyaWMgY2hhcmFjdGVycyINCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9LA0KICAgICAgICAgIHsNCiAgICAgICAgICAgICJuYW1lIjogIm1vbmdvREJBZG1pbiIsDQogICAgICAgICAgICAidHlwZSI6ICJNaWNyb3NvZnQuQ29tbW9uLlRleHRCb3giLA0KICAgICAgICAgICAgImxhYmVsIjogIm1vbmdvREJBZG1pbiIsDQogICAgICAgICAgICAidG9vbFRpcCI6ICJBZG1pbiBuYW1lIGZvciBNb25nb0RCIiwNCiAgICAgICAgICAgICJkZWZhdWx0VmFsdWUiOiAiIiwNCiAgICAgICAgICAgICJjb25zdHJhaW50cyI6IHsNCiAgICAgICAgICAgICAgInJlcXVpcmVkIjogdHJ1ZSwNCiAgICAgICAgICAgICAgInJlZ2V4IjogIl5bYS16MC05QS1aXXs0LDIwfSQiLA0KICAgICAgICAgICAgICAidmFsaWRhdGlvbk1lc3NhZ2UiOiAiQmV0d2VlbiA0IGFuZCAyMCBhbHBoYW51bWVyaWMgY2hhcmFjdGVycyINCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9LA0KICAgICAgICAgIHsNCiAgICAgICAgICAgICJuYW1lIjogIm1vbmdvREJQYXNzd29yZCIsDQogICAgICAgICAgICAidHlwZSI6ICJNaWNyb3NvZnQuQ29tbW9uLlBhc3N3b3JkQm94IiwNCiAgICAgICAgICAgICJsYWJlbCI6IHsNCiAgICAgICAgICAgICAgInBhc3N3b3JkIjogIk5vIHNwZWNpYWwgY2hhcmFjdGVycywgYmV0d2VlbiAxMiBhbmQgMzAgY2hhcmFjdGVycyBsb25nIiwNCiAgICAgICAgICAgICAgImNvbmZpcm1QYXNzd29yZCI6ICJQYXNzd29yZHMgbXVzdCBtYXRjaCINCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICAiY29uc3RyYWludHMiOiB7DQogICAgICAgICAgICAgICJyZXF1aXJlZCI6IHRydWUsDQogICAgICAgICAgICAgICJyZWdleCI6ICJeW2EtejAtOUEtWl17MTIsMzB9JCIsDQogICAgICAgICAgICAgICJ2YWxpZGF0aW9uTWVzc2FnZSI6ICJNdXN0IGJlIGJldHdlZW4gMTIgYW5kIDMwIGFscGhhbnVtZXJpYyBjaGFyYWN0ZXJzIGxvbmcuIg0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICJ2aXNpYmxlIjogdHJ1ZSwNCiAgICAgICAgICAgICJvcHRpb25zIjogew0KICAgICAgICAgICAgICAiaGlkZUNvbmZpcm1hdGlvbiI6IGZhbHNlDQogICAgICAgICAgICB9LA0KICAgICAgICAgICAgInRvb2xUaXAiOiAiUGFzc3dvcmQgZm9yIE1vbmdvREIgYWRtaW4iDQogICAgICAgICAgfSwNCiAgICAgICAgICB7DQogICAgICAgICAgICAibmFtZSI6ICJGcm9udEFwcFJlcGxpY2EiLA0KICAgICAgICAgICAgInR5cGUiOiAiTWljcm9zb2Z0LkNvbW1vbi5UZXh0Qm94IiwNCiAgICAgICAgICAgICJsYWJlbCI6ICJGcm9udEFwcFJlcGxpY2EiLA0KICAgICAgICAgICAgImRlZmF1bHRWYWx1ZSI6ICIxIiwNCiAgICAgICAgICAgICJ0b29sVGlwIjogIkZyb250IEFwcCBSZXBsaWNhIiwNCiAgICAgICAgICAgICJjb25zdHJhaW50cyI6IHsNCiAgICAgICAgICAgICAgInJlcXVpcmVkIjogdHJ1ZSwNCiAgICAgICAgICAgICAgInJlZ2V4IjogIl5bYS16MC05QS1aXXs2LDMwfSQiLA0KICAgICAgICAgICAgICAidmFsaWRhdGlvbk1lc3NhZ2UiOiAiQmV0d2VlbiA2IGFuZCAzMCBhbHBoYW51bWVyaWMgY2hhcmFjdGVycyINCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9LA0KICAgICAgICAgIHsNCiAgICAgICAgICAgICJuYW1lIjogImNsdXN0ZXJETlMiLA0KICAgICAgICAgICAgInR5cGUiOiAiTWljcm9zb2Z0LkNvbW1vbi5UZXh0Qm94IiwNCiAgICAgICAgICAgICJsYWJlbCI6ICJjbHVzdGVyRE5TIiwNCiAgICAgICAgICAgICJ0b29sVGlwIjogIkNsdXN0ZXIgRE5TIiwNCiAgICAgICAgICAgICJkZWZhdWx0VmFsdWUiOiAiIiwNCiAgICAgICAgICAgICJjb25zdHJhaW50cyI6IHsNCiAgICAgICAgICAgICAgInJlcXVpcmVkIjogdHJ1ZSwNCiAgICAgICAgICAgICAgInJlZ2V4IjogIl5bYS16MC05QS1aXXs0LDE1fSQiLA0KICAgICAgICAgICAgICAidmFsaWRhdGlvbk1lc3NhZ2UiOiAiQmV0d2VlbiA0IGFuZCAzMCBhbHBoYW51bWVyaWMgY2hhcmFjdGVycyINCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9LA0KICAgICAgICAgIHsNCiAgICAgICAgICAgICJuYW1lIjogIk5hbWVTcGFjZSIsDQogICAgICAgICAgICAidHlwZSI6ICJNaWNyb3NvZnQuQ29tbW9uLlRleHRCb3giLA0KICAgICAgICAgICAgImxhYmVsIjogIk5hbWVzcGFjZSIsDQogICAgICAgICAgICAidG9vbFRpcCI6ICJOYW1lc3BhY2UiLA0KICAgICAgICAgICAgImRlZmF1bHRWYWx1ZSI6ICJkZWZhdWx0IiwNCiAgICAgICAgICAgICJjb25zdHJhaW50cyI6IHsNCiAgICAgICAgICAgICAgInJlcXVpcmVkIjogdHJ1ZSwNCiAgICAgICAgICAgICAgInJlZ2V4IjogIl5bYS16MC05QS1aXXs0LDMwfSQiLA0KICAgICAgICAgICAgICAidmFsaWRhdGlvbk1lc3NhZ2UiOiAiQmV0d2VlbiA0IGFuZCAzMCBhbHBoYW51bWVyaWMgY2hhcmFjdGVycyINCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9DQogICAgICAgIF0NCiAgICAgIH0NCiAgICBdLA0KICAgICJvdXRwdXRzIjogew0KICAgICAgImNsdXN0ZXJSZXNvdXJjZU5hbWUiOiAiW2Jhc2ljcygnQ2x1c3RlclJlc291cmNlTmFtZScpXSIsDQogICAgICAiZXh0ZW5zaW9uUmVzb3VyY2VOYW1lIjogIltzdGVwcygnRXh0ZW5zaW9uQ29uZmlndXJhdGlvbicpLmV4dGVuc2lvblJlc291cmNlTmFtZV0iLA0KICAgICAgImFwcC10aXRsZSI6ICJbc3RlcHMoJ0V4dGVuc2lvbkNvbmZpZ3VyYXRpb24nKS50aXRsZV0iLA0KICAgICAgImFwcC1Gcm9udEFwcE5hbWUiOiAiW3N0ZXBzKCdFeHRlbnNpb25Db25maWd1cmF0aW9uJykuRnJvbnRBcHBOYW1lXSIsDQogICAgICAiYXBwLUZyb250QXBwUmVwbGljYSI6ICJbc3RlcHMoJ0V4dGVuc2lvbkNvbmZpZ3VyYXRpb24nKS5Gcm9udEFwcFJlcGxpY2FdIiwNCiAgICAgICJhcHAtY2x1c3RlckROUyI6ICJbc3RlcHMoJ0V4dGVuc2lvbkNvbmZpZ3VyYXRpb24nKS5jbHVzdGVyRE5TXSIsDQogICAgICAiYXBwLW1vbmdvREJBZG1pbiIgOiAiW3N0ZXBzKCdFeHRlbnNpb25Db25maWd1cmF0aW9uJykubW9uZ29EQkFkbWluXSIsDQogICAgICAiYXBwLW1vbmdvREJQYXNzd29yZCIgOiAiW3N0ZXBzKCdFeHRlbnNpb25Db25maWd1cmF0aW9uJykubW9uZ29EQlBhc3N3b3JkXSIsDQogICAgICAiYXBwLU5hbWVTcGFjZSI6ICJbc3RlcHMoJ0V4dGVuc2lvbkNvbmZpZ3VyYXRpb24nKS5OYW1lU3BhY2VdIiwNCiAgICAgICJsb2NhdGlvbiI6ICJbbG9jYXRpb24oKV0iDQogICAgfQ0KICB9DQp9"},"definitions":{"porter-debug-parameter":{"$comment":"porter-internal","$id":"https://porter.sh/generated-bundle/#porter-debug","default":false,"description":"Print debug information from Porter when executing the bundle","type":"boolean"}},"description":"","images":{"backend":{"contentDigest":"sha256:e0b1614551474ee2f3c3ef7c9706b5e19f2107aa36b73c910522af9fa8eb756e","description":"","image":"dsacr01.azurecr.io/mongo@sha256:e0b1614551474ee2f3c3ef7c9706b5e19f2107aa36b73c910522af9fa8eb756e","imageType":"docker"},"frontend":{"contentDigest":"sha256:ac654125c21e37e2fdb6a5b3c22f1dad4c4628236cf58f8a606d9c5183e4c1c9","description":"","image":"dsacr01.azurecr.io/todojs@sha256:ac654125c21e37e2fdb6a5b3c22f1dad4c4628236cf58f8a606d9c5183e4c1c9","imageType":"docker"}},"invocationImages":[{"image":"dsacr01.azurecr.io/com.nonmicrosoft.azuretodoapptest-installer:1.0.0","imageType":"docker"}],"name":"com.nonmicrosoft.azuretodoapptest","parameters":{"porter-debug":{"definition":"porter-debug-parameter","description":"Print debug information from Porter when executing the bundle","destination":{"env":"PORTER_DEBUG"}}},"requiredExtensions":["sh.porter.file-parameters"],"schemaVersion":"v1.0.0","version":"1.0.0"}